/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsJSONValue } from "../../validators";

import {
  IsOptional,
  IsString,
  MaxLength,
  ValidateNested,
  IsInt,
  Min,
  Max,
  IsBoolean,
  IsEnum,
} from "class-validator";

import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { BookingCreateNestedManyWithoutPropertiesInput } from "./BookingCreateNestedManyWithoutPropertiesInput";
import { Type } from "class-transformer";
import { EnumPropertyPropertyType } from "./EnumPropertyPropertyType";
import { ReportCreateNestedManyWithoutPropertiesInput } from "./ReportCreateNestedManyWithoutPropertiesInput";
import { ServiceCreateNestedManyWithoutPropertiesInput } from "./ServiceCreateNestedManyWithoutPropertiesInput";
import { EnumPropertyStatus } from "./EnumPropertyStatus";

@InputType()
class PropertyCreateInput {
  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  additionalServices?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: () => BookingCreateNestedManyWithoutPropertiesInput,
  })
  @ValidateNested()
  @Type(() => BookingCreateNestedManyWithoutPropertiesInput)
  @IsOptional()
  @Field(() => BookingCreateNestedManyWithoutPropertiesInput, {
    nullable: true,
  })
  bookings?: BookingCreateNestedManyWithoutPropertiesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  cancellationPolicy?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  emergencyContact?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  guestCapacity?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  houseRules?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  inventoryInstructions?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  laundryAgreement?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  numberOfBathrooms?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  numberOfBedrooms?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  principalService?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  productsReposition?: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  propertyName?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumPropertyPropertyType,
  })
  @IsEnum(EnumPropertyPropertyType)
  @IsOptional()
  @Field(() => EnumPropertyPropertyType, {
    nullable: true,
  })
  propertyType?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  qrCode?: string | null;

  @ApiProperty({
    required: false,
    type: () => ReportCreateNestedManyWithoutPropertiesInput,
  })
  @ValidateNested()
  @Type(() => ReportCreateNestedManyWithoutPropertiesInput)
  @IsOptional()
  @Field(() => ReportCreateNestedManyWithoutPropertiesInput, {
    nullable: true,
  })
  reports?: ReportCreateNestedManyWithoutPropertiesInput;

  @ApiProperty({
    required: false,
    type: () => ServiceCreateNestedManyWithoutPropertiesInput,
  })
  @ValidateNested()
  @Type(() => ServiceCreateNestedManyWithoutPropertiesInput)
  @IsOptional()
  @Field(() => ServiceCreateNestedManyWithoutPropertiesInput, {
    nullable: true,
  })
  services?: ServiceCreateNestedManyWithoutPropertiesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  specialInstructions?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  squareMeters?: number | null;

  @ApiProperty({
    required: false,
    enum: EnumPropertyStatus,
  })
  @IsEnum(EnumPropertyStatus)
  @IsOptional()
  @Field(() => EnumPropertyStatus, {
    nullable: true,
  })
  status?: "Option1" | null;
}

export { PropertyCreateInput as PropertyCreateInput };

/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsJSONValue } from "../../validators";
import {
  IsOptional,
  IsString,
  MaxLength,
  IsEnum,
  IsDate,
} from "class-validator";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { EnumContentContentType } from "./EnumContentContentType";
import { Type } from "class-transformer";
import { EnumContentStatus } from "./EnumContentStatus";
import { EnumContentVisibility } from "./EnumContentVisibility";

@InputType()
class ContentUpdateInput {
  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  categories?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  contentDetail?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumContentContentType,
  })
  @IsEnum(EnumContentContentType)
  @IsOptional()
  @Field(() => EnumContentContentType, {
    nullable: true,
  })
  contentType?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  creator?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  publicationDate?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  recipients?: InputJsonValue;

  @ApiProperty({
    required: false,
    enum: EnumContentStatus,
  })
  @IsEnum(EnumContentStatus)
  @IsOptional()
  @Field(() => EnumContentStatus, {
    nullable: true,
  })
  status?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updateDate?: Date | null;

  @ApiProperty({
    required: false,
    enum: EnumContentVisibility,
  })
  @IsEnum(EnumContentVisibility)
  @IsOptional()
  @Field(() => EnumContentVisibility, {
    nullable: true,
  })
  visibility?: "Option1" | null;
}

export { ContentUpdateInput as ContentUpdateInput };

/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
  IsEnum,
  IsDate,
} from "class-validator";
import { BookingWhereUniqueInput } from "../../booking/base/BookingWhereUniqueInput";
import { Type } from "class-transformer";
import { OfficeWhereUniqueInput } from "../../office/base/OfficeWhereUniqueInput";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { EnumReportPriority } from "./EnumReportPriority";
import { PropertyWhereUniqueInput } from "../../property/base/PropertyWhereUniqueInput";
import { EnumReportReportStatus } from "./EnumReportReportStatus";
import { EnumReportReportType } from "./EnumReportReportType";
import { RequestCreateNestedManyWithoutReportsInput } from "./RequestCreateNestedManyWithoutReportsInput";
import { ServiceWhereUniqueInput } from "../../service/base/ServiceWhereUniqueInput";

@InputType()
class ReportCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  assignedTo?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  author?: string | null;

  @ApiProperty({
    required: false,
    type: () => BookingWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => BookingWhereUniqueInput)
  @IsOptional()
  @Field(() => BookingWhereUniqueInput, {
    nullable: true,
  })
  booking?: BookingWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => OfficeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OfficeWhereUniqueInput)
  @IsOptional()
  @Field(() => OfficeWhereUniqueInput, {
    nullable: true,
  })
  office?: OfficeWhereUniqueInput | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  photos?: InputJsonValue;

  @ApiProperty({
    required: false,
    enum: EnumReportPriority,
  })
  @IsEnum(EnumReportPriority)
  @IsOptional()
  @Field(() => EnumReportPriority, {
    nullable: true,
  })
  priority?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => PropertyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PropertyWhereUniqueInput)
  @IsOptional()
  @Field(() => PropertyWhereUniqueInput, {
    nullable: true,
  })
  property?: PropertyWhereUniqueInput | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  reportDatetime?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  reportName?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumReportReportStatus,
  })
  @IsEnum(EnumReportReportStatus)
  @IsOptional()
  @Field(() => EnumReportReportStatus, {
    nullable: true,
  })
  reportStatus?: "Option1" | null;

  @ApiProperty({
    required: false,
    enum: EnumReportReportType,
  })
  @IsEnum(EnumReportReportType)
  @IsOptional()
  @Field(() => EnumReportReportType, {
    nullable: true,
  })
  reportType?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => RequestCreateNestedManyWithoutReportsInput,
  })
  @ValidateNested()
  @Type(() => RequestCreateNestedManyWithoutReportsInput)
  @IsOptional()
  @Field(() => RequestCreateNestedManyWithoutReportsInput, {
    nullable: true,
  })
  requests?: RequestCreateNestedManyWithoutReportsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  resolutionComments?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  resolutionDate?: Date | null;

  @ApiProperty({
    required: false,
    type: () => ServiceWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ServiceWhereUniqueInput)
  @IsOptional()
  @Field(() => ServiceWhereUniqueInput, {
    nullable: true,
  })
  service?: ServiceWhereUniqueInput | null;
}

export { ReportCreateInput as ReportCreateInput };

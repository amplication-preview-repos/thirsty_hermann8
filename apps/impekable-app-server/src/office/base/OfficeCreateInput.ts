/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BookingCreateNestedManyWithoutOfficesInput } from "./BookingCreateNestedManyWithoutOfficesInput";
import {
  ValidateNested,
  IsOptional,
  IsInt,
  Min,
  Max,
  IsString,
  MaxLength,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { ReportCreateNestedManyWithoutOfficesInput } from "./ReportCreateNestedManyWithoutOfficesInput";
import { RequestCreateNestedManyWithoutOfficesInput } from "./RequestCreateNestedManyWithoutOfficesInput";
import { ServiceCreateNestedManyWithoutOfficesInput } from "./ServiceCreateNestedManyWithoutOfficesInput";
import { EnumOfficeStatus } from "./EnumOfficeStatus";

@InputType()
class OfficeCreateInput {
  @ApiProperty({
    required: false,
    type: () => BookingCreateNestedManyWithoutOfficesInput,
  })
  @ValidateNested()
  @Type(() => BookingCreateNestedManyWithoutOfficesInput)
  @IsOptional()
  @Field(() => BookingCreateNestedManyWithoutOfficesInput, {
    nullable: true,
  })
  bookings?: BookingCreateNestedManyWithoutOfficesInput;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  contactInformation?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  currentBookings?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  franchisee?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  location?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  maxBookingCapacity?: number | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  operatingHours?: InputJsonValue;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  operationManagersIds?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => ReportCreateNestedManyWithoutOfficesInput,
  })
  @ValidateNested()
  @Type(() => ReportCreateNestedManyWithoutOfficesInput)
  @IsOptional()
  @Field(() => ReportCreateNestedManyWithoutOfficesInput, {
    nullable: true,
  })
  reports?: ReportCreateNestedManyWithoutOfficesInput;

  @ApiProperty({
    required: false,
    type: () => RequestCreateNestedManyWithoutOfficesInput,
  })
  @ValidateNested()
  @Type(() => RequestCreateNestedManyWithoutOfficesInput)
  @IsOptional()
  @Field(() => RequestCreateNestedManyWithoutOfficesInput, {
    nullable: true,
  })
  requests?: RequestCreateNestedManyWithoutOfficesInput;

  @ApiProperty({
    required: false,
    type: () => ServiceCreateNestedManyWithoutOfficesInput,
  })
  @ValidateNested()
  @Type(() => ServiceCreateNestedManyWithoutOfficesInput)
  @IsOptional()
  @Field(() => ServiceCreateNestedManyWithoutOfficesInput, {
    nullable: true,
  })
  services?: ServiceCreateNestedManyWithoutOfficesInput;

  @ApiProperty({
    required: false,
    enum: EnumOfficeStatus,
  })
  @IsEnum(EnumOfficeStatus)
  @IsOptional()
  @Field(() => EnumOfficeStatus, {
    nullable: true,
  })
  status?: "Option1" | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  teamIds?: InputJsonValue;
}

export { OfficeCreateInput as OfficeCreateInput };
